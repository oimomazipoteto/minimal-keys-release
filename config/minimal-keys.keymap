#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#undef ZMK_POINTING_DEFAULT_SCRL_VAL

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        poteto: poteto {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp I &kp M &kp O &kp M &kp A &kp Z &kp I &kp P &kp O &kp T &kp E &kp T &kp O &kp N3 &kp AT &kp N8>;
            label = "POTETO";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off 5>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll: scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E           &kp R            &kp T                                           &kp Y          &kp U        &kp I            &kp O            &kp P
&mt LCTRL A       &mt LEFT_ALT S  &mt LEFT_WIN D  &mt LS(LCTRL) F  &kp G        &kp Q               &kp RC(RS(X))  &kp H          &mt RCTRL J  &mt RIGHT_WIN K  &mt RIGHT_ALT L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X           &kp C           &kp V            &kp B        &kp LC(LA(HOME))    &kp RA(LEFT)   &kp N          &lt 3 M      &kp COMMA        &kp PERIOD       &mt LEFT_SHIFT MINUS
&kp ESC           &kp DEL         &kp LEFT_WIN    &lt 3 TAB        &lt 2 SPACE  &lt 1 LANG2         &lt 5 LANG1    &kp BACKSPACE                                                 &kp F10
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&mt LEFT_ALT F12    &kp F7     &kp F8        &kp F9  &none                                    &kp COLON      &kp N7        &kp N8        &kp N9        &kp ASTERISK
&mt LCTRL F11       &kp F4     &kp F5        &kp F6  &kp PLUS   &kp COLON    &kp RS(RCMD)     &kp SLASH      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ENTER
&mt LEFT_SHIFT F10  &kp F1     &kp F2        &kp F3  &kp EQUAL  &kp SEMI     &kp RIGHT_SHIFT  &kp DOT        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS
&kp ESC             &kp LG(F)  &kp LEFT_WIN  &none   &none      &none        &kp NUMBER_0     &kp BACKSPACE                                            &kp F10
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&kp LG(LS(S))         &kp LC(LS(TAB))     &kp LG(E)             &kp LC(TAB)      &kp LC(LS(T))                                  &kp RS(HOME)   &kp HOME          &kp UP_ARROW    &kp END          &kp RS(END)
&mt LCTRL LC(A)       &mt LEFT_ALT LC(S)  &mt LEFT_WIN LG(TAB)  &mt LCTRL LC(F)  &kp TAB        &kp NUMBER_0    &kp UNDERSCORE  &kp RS(LEFT)   &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RS(RIGHT)
&mt LEFT_SHIFT LC(Z)  &kp LC(X)           &kp LC(C)             &kp LC(V)        &kp LC(LS(V))  &kp EQUAL       &kp LG(SPACE)   &kp LESS_THAN  &kp GREATER_THAN  &kp COMMA       &kp PERIOD       &kp RIGHT_SHIFT
&kp ESC               &kp DEL             &kp LEFT_WIN          &kp RS(RG(V))    &kp RG(C)      &kp RG(V)       &trans          &kp BACKSPACE                                                     &kp F10
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        SCROLL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN             &kp HASH                     &kp DOLLAR                 &kp PERCENT                                            &kp LCTRL          &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp HOME         &kp F5                  &mt LEFT_WIN LS(LEFT_BRACE)  &mt LCTRL LS(RIGHT_BRACE)  &kp END           &kp EXCLAMATION    &trans            &kp QUESTION       &kp COLON      &kp DOUBLE_QUOTES  &kp UNDERSCORE        &kp PIPE
&kp LEFT_SHIFT   &kp LG(LS(LEFT_ARROW))  &kp LEFT_BRACKET             &kp RIGHT_BRACKET          &kp LEFT_COMMAND  &poteto            &trans            &kp SLASH          &kp SEMICOLON  &kp SINGLE_QUOTE   &kp MINUS             &kp BACKSLASH
&kp RA(SPACE)    &kp INT_HENKAN          &kp LANGUAGE_3               &none                      &trans            &trans             &kp LEFT_BRACKET  &kp RIGHT_BRACKET                                                          &kp F10
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SYMBOL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &trans
            >;
        };

        MOUSE {
            bindings = <
&bt BT_CLR_ALL  &bt BT_CLR    &trans          &trans        &trans                                &trans   &trans  &trans    &trans    &trans
&trans          &trans        &trans          &trans        &trans        &trans          &trans  &trans   &trans  &mkp MB1  &mkp MB2  &trans
&trans          &trans        &trans          &bt BT_SEL 4  &bt BT_SEL 3  &trans          &trans  &poteto  &trans  &trans    &trans    &trans
&kp KP_NUMLOCK  &kp CAPSLOCK  &kp SCROLLLOCK  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &trans  &trans                               &trans
            >;
        };
    };
};
