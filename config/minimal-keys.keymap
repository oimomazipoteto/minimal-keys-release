#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#undef ZMK_POINTING_DEFAULT_SCRL_VAL

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll: scroll {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E           &kp R            &kp T                                  &kp Y            &kp U        &kp I            &kp O            &kp P
&mt LCTRL A       &mt LEFT_ALT S  &mt LEFT_WIN D  &mt LS(LCTRL) F  &kp G        &mkp MB1       &kp COLON  &kp H            &mt RCTRL J  &mt RIGHT_WIN K  &mt RIGHT_ALT L  &kp ENTER
&mt LEFT_SHIFT Z  &kp X           &kp C           &kp V            &kp B        &mkp MB2       &kp CAPS   &kp N            &lt 3 M      &mkp LCLK        &mkp RCLK        &mt LEFT_SHIFT MINUS
&kp ESC           &kp DEL         &kp LEFT_WIN    &lt 4 TAB        &lt 2 SPACE  &lt 1 LANG2    &lt 1 DEL  &lt 2 BACKSPACE                                                 &kp F10
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&mt LEFT_ALT F12    &kp F7     &kp F8        &kp F9  &none                                    &kp COLON      &kp N7        &kp N8        &kp N9        &kp ASTERISK
&mt LCTRL F11       &kp F4     &kp F5        &kp F6  &kp PLUS   &kp COLON    &kp RS(RCMD)     &kp SLASH      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ENTER
&mt LEFT_SHIFT F10  &kp F1     &kp F2        &kp F3  &kp EQUAL  &kp SEMI     &kp RIGHT_SHIFT  &kp DOT        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS
&kp ESC             &kp LG(F)  &kp LEFT_WIN  &none   &none      &none        &kp NUMBER_0     &kp BACKSPACE                                            &kp F10
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&kp LG(LS(S))         &kp LC(LS(TAB))     &kp LG(E)             &kp LC(TAB)      &kp LC(LS(T))                                  &kp RS(HOME)   &kp HOME          &kp UP_ARROW    &kp END          &kp RS(END)
&mt LCTRL LC(A)       &mt LEFT_ALT LC(S)  &mt LEFT_WIN LG(TAB)  &mt LCTRL LC(F)  &kp TAB        &kp NUMBER_0    &kp UNDERSCORE  &kp RS(LEFT)   &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RS(RIGHT)
&mt LEFT_SHIFT LC(Z)  &kp LC(X)           &kp LC(C)             &kp LC(V)        &kp LC(LS(V))  &kp EQUAL       &kp LG(SPACE)   &kp LESS_THAN  &kp GREATER_THAN  &kp COMMA       &kp PERIOD       &kp RIGHT_SHIFT
&kp ESC               &kp DEL             &kp LEFT_WIN          &kp RS(RG(V))    &kp RG(C)      &kp RG(V)       &trans          &kp BACKSPACE                                                     &kp F10
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        SCROLL {
            bindings = <
&kp EXCLAMATION  &kp F1                  &kp F3          &kp F4                   &trans                                         &kp RA(E)        &kp RG(RA(DOWN_ARROW))    &kp RC(UP_ARROW)           &kp RA(LEFT_ARROW)    &trans
&kp HOME         &kp F5                  &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END           &trans    &trans             &kp RA(W)        &kp RS(RG(LEFT_BRACKET))  &kp RS(RG(RIGHT_BRACKET))  &kp RG(RS(NUMBER_4))  &bt BT_NXT
&kp LEFT_SHIFT   &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp LEFT_COMMAND  &trans    &trans             &kp RG(W)        &kp RG(LEFT_BRACKET)      &kp RG(RIGHT_BRACKET)      &kp RS(RG(T))         &bt BT_PRV
&kp RA(SPACE)    &kp INT_HENKAN          &kp LANGUAGE_3  &kp RS(LANGUAGE_8)       &trans            &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                                                                             &bt BT_CLR
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SYMBOL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;
        };
    };
};
